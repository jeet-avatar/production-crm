name: Semgrep Security Scan

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
  # Schedule weekly scans
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at midnight

jobs:
  semgrep:
    name: Semgrep Code Analysis
    runs-on: ubuntu-latest

    # Skip duplicate runs
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    # Required for uploading results to GitHub Security tab
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis

      - name: Run Semgrep
        uses: semgrep/semgrep-action@v1
        with:
          config: >-
            auto
            .semgrep.yml
          generateSarif: true
        env:
          # Optional: Add Semgrep App token for more features
          # SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          SEMGREP_RULES: auto

      # Upload SARIF file to GitHub Security tab
      - name: Upload SARIF file
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          category: semgrep

      # Fail the build if blocking issues are found
      - name: Check for blocking issues
        if: always()
        run: |
          if [ -f semgrep.sarif ]; then
            ERROR_COUNT=$(jq '[.runs[].results[] | select(.level == "error")] | length' semgrep.sarif)
            echo "Found $ERROR_COUNT error-level issues"
            if [ "$ERROR_COUNT" -gt 0 ]; then
              echo "::error::Semgrep found $ERROR_COUNT error-level security issues"
              exit 1
            fi
          fi
